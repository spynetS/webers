.\" Automatically generated by Pandoc 3.1.6
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "WEBERS" "1" "" "Version 1.0" "Frivolous \[lq]Hello World\[rq] Documentation"
.hy
.SH NAME
.PP
\f[B]hello\f[R] \[em] prints Hello, World!
.SH SYNOPSIS
.PP
\f[B]webers\f[R] [\f[B]-c\f[R]|\f[B]\[en]compile\f[R]]
[\f[B]-p\f[R]|\f[B]\[en]path\f[R] \f[I]source_path\f[R]]
[\f[B]-o\f[R]|\f[B]\[en]output\f[R] \f[I]output_path\f[R]]
.PD 0
.P
.PD
\f[B]webers\f[R] [\f[B]generate-example\f[R]]
.PD 0
.P
.PD
\f[B]webers\f[R] [\f[B]start\f[R]] [\f[B]-p\f[R]|\f[B]\[en]path\f[R]
\f[I]input_path\f[R]] [\f[B]-o\f[R]|\f[B]\[en]output\f[R]
\f[I]output_path\f[R]]
.SH DESCRIPTION
.PP
Webers lets you use components in your html pages.
Webers compiles other html \[lq]components\[rq] inside others.
It also lets you script with python to change your markup at compile
time.
.SH EXAMPLE
.SS Component system
.PP
Parent component
.IP
.nf
\f[C]
<div class=\[dq]flex w-screen h-screen bg-blue-200 flex-col items-center gap-2 justify-center\[dq] >
    <h>Search</h>
    <Searchbar placeholder=\[dq]Search\[dq] mode=\[dq]dark\[dq] ></Searchbar>
</div>
\f[R]
.fi
.PP
Searchbar component
.IP
.nf
\f[C]
<div class=\[dq]searchbar input1 $mode\[dq]>
    <input  type=\[dq]text\[dq] placeholder=$placeholder ></input>
</div>
\f[R]
.fi
.PP
Compiled parent
.IP
.nf
\f[C]
<div class=\[dq]flex w-screen h-screen bg-blue-200 flex-col items-center gap-2 justify-center\[dq] >
    <h>Search</h>
    <div class=\[dq]searchbar input1 dark\[dq]>
        <input  type=\[dq]text\[dq] placeholder=\[dq]Search\[dq]\[dq] ></input>
    </div>
</div>
\f[R]
.fi
.SS Python scripting
.PP
Webers also lets you script with python inside your html.
.IP
.nf
\f[C]
${
list_of_hello = \[dq]\[dq]
for i in range(10):
    list_of_hello += f\[dq]<h1>Hello this is a test page ${i}$</h1>\[dq]


}$
<div>
    <h1>This is a example of the power of Webers</h1>
    ${list_of_hello}$
</div>
\f[R]
.fi
.IP "1." 3
Using the environment variable \f[I]DEFAULT_HELLO_DEDICATION\f[R]
.IP "2." 3
Using the per-user configuration file, \f[I]\[ti]/.hellorc\f[R]
.IP "3." 3
Using the system-wide configuration file, \f[I]/etc/hello.conf\f[R]
.IP "4." 3
Finally, using \[lq]world\[rq].
.SS Options
.TP
-h, \[en]help
Prints brief usage information.
.TP
-p \[en]path
Sets the path where weber will look for components.
DEFAULT=\[lq]./\[rq].
.TP
-o, \[en]output
Set the output path.
DEFAULT=\[lq]./out\[rq].
.RS
.PP
The path could be a folder or a file.
If it is a folder all the components will be output there.
.RE
.TP
-c, \[en]compile
Compiles the following files.
NOTE: If the compiled file requiers other files in the project they will
also be compiled.
DEFUALT=\[lq]all\[rq]
.TP
generate-example generate-example
Generate a small project to so you can check the features out.
.TP
start \[en]start
Will listen to changes in the path (-p) and then compile the project
.SH ENVIRONMENT
.PP
See GitHub Issues: <https://github.com/spynetS/webers/issues>
.SH AUTHOR
.PP
Alfred Roos alfred\[at]stensatter.se
.SH SEE ALSO
